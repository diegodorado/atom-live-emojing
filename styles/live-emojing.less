// The ui-variables file is provided by base themes provided by Atom.
//
// See https://github.com/atom/atom-dark-ui/blob/master/styles/ui-variables.less
// for a full listing of what's available.
@import "ui-variables";

.live-emojing, .live-emojing canvas {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  background: black;
}


.live-emojing .canvas2d {
  position: absolute;
  visibility: hidden;
}


@pic-size: 128px;
@stroke-width: 8px;

.live-emojing .pics{
  .pic{
    position: absolute;
    font-size: 0;
    width: @pic-size;
    height: @pic-size;
    margin-top: (-@pic-size /2 );
    transition: all 1s ease;
    right: 28px;
    opacity: 0.9;
    animation: grow 2s infinite alternate steps(60);
    &.occupied{
      svg {
        ellipse{
          transition: all 1s linear;
          &.bg{
            stroke: #ffffff;
          }
          &.fg{
            animation: strokeVar 0.5s infinite alternate steps(60);
            //stroke: #ff40a0;
          }
        }
      }
    }
    &:not(.occupied) {
      img {
        filter: grayscale(1);
      }
    }
    img {
      border-radius: 50%;
      width: 100%;
      height: 100%;
      z-index: -1;
    }
    svg {
      left: 0;
      top: 0;
      position: absolute;
      overflow: visible;
      width: 100%;
      height: 100%;
      z-index: 0;
      transform: rotate(-90deg);
      ellipse{
        ry: ( ( @pic-size - @stroke-width ) / 2 );
        rx: ( ( @pic-size - @stroke-width ) / 2 );
        cy: ( @pic-size / 2 );
        cx: ( @pic-size / 2 );
        stroke-width: @stroke-width;
        fill: transparent;
        &.bg{
          stroke: #cccccc;
        }
        &.fg{
          stroke-dasharray: ( ( @pic-size - @stroke-width ) * 3.1416 );
          stroke-dashoffset: ( ( @pic-size - @stroke-width ) * 3.1416 );
          stroke: cyan;
        }
      }
    }



  }
}


body.live-emojing-enabled {
  &,
  atom-workspace,
  .header *,
  .footer *,
  atom-workspace-axis,
  atom-workspace-axis :not(input):not(.cursor):not(autocomplete-suggestion-list):not(atom-overlay):not(span):not(.region),
  atom-workspace *:before,
  atom-workspace *:after {
    background: transparent !important;
    border: none !important;
    text-shadow: 0 1px 1px black;
    box-shadow: none !important;
  }
  .line > span {
    background: rgba(0,0,0,0.07) !important;
  }
  .cursor {
    width: 0 !important;
    box-shadow: 0 0 3px #0FF !important;
    border-left: 4px solid #0FF !important;
  }
  autocomplete-suggestion-list,
  atom-overlay {
    background: rgba(0, 0, 0, 0.9) !important;
  }
  .region {
    background: rgba(0,255,255,0.4) !important;
    z-index: 9 !important;
  }
  .selected:before {
    background: rgba(0,0,0,0.3) !important;
  }
  atom-panel-container.footer{
    display: none;
  }
  .line-numbers{
    //display: none;
    opacity: 0.5;
  }
  .list-inline.tab-bar.inset-panel{
    //display: none;
    opacity: 0.5;
  }
}

@keyframes grow {
  from {
    transform: scale3d(1.0, 1.0, 1.0);
  }

  to {
    transform: scale3d(1.1, 1.1, 1.1);
  }
}

@keyframes strokeVar {
  from {
    stroke: #ff40a0;
  }
  to {
    stroke: cyan;
  }
}
